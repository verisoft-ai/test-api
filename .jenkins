pipeline {
    agent {
        node {
            label 'demo-docker-slave'
        }
    }

    triggers {
        bitbucketPush()
    }

    stages {
        stage('Build') {
            steps {
                // Get some code from a GitHub repository
                git url: 'https://NirGallner@bitbucket.org/nir_gallner/test.api.git', branch: 'develop'

                // Run Maven on a Unix agent.
                sh 'mvn -Dmaven.test.failure.ignore=true clean test'

            // To run Maven on a Windows agent, use
            // bat "mvn -Dmaven.test.failure.ignore=true clean package"
            }

            post {
                // If Maven was able to run the tests, even if some of the test
                // failed, record the test results and archive the jar file.
                success {
                    junit '**/target/surefire-reports/TEST-*.xml'
                //archiveArtifacts 'target/*.jar'
                }
            }
        }
    }

    post{
        failure{
            slackSend( channel: "#infra", token: "slack_webhook token", color: "bad", message: "FAILED: ${custom_msg()}")
        }
        success{
            slackSend( channel: "#infra", token: "slack_webhook token", color: "good", message: "PASSED: ${custom_msg()}")
        }
    }
}

def custom_msg()
{
  def JENKINS_URL= "http://65.109.141.131:9080"
  def JOB_NAME = env.JOB_NAME
  def BUILD_ID= env.BUILD_ID
  def JENKINS_LOG= "Job [${env.JOB_NAME}] Logs path: ${JENKINS_URL}/job/${JOB_NAME}/${BUILD_ID}/console"
  return JENKINS_LOG
}
